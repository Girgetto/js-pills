{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":"/pill/shuffle-an-arrays-elements","title":"Shuffle an array's elements","description":"Shuffling an array consists on randomly re-arrange the content of that structure. A simple and easy way to shuffle the elements of an array is the following:"},"id":"29181b90-2183-5c52-8cb4-0a1a20934a9c"}},{"node":{"frontmatter":{"slug":"/pill/converting-to-boolean-using-!!-operator","title":"Converting to boolean using `!!` operator","description":"JavaScript has a Boolean data type. It can **only** take the values true or false, like YES/NO or ON/OFF"},"id":"7c32a288-f1c6-5768-9bfb-5951d06d2a15"}},{"node":{"frontmatter":{"slug":"/pill/replace-all","title":"Replace all","description":"We're presenting several ways to replace all the occurrences of a substring within a string in Javascript."},"id":"600ca4f0-048a-5510-b12c-94eb8b4b9c91"}},{"node":{"frontmatter":{"slug":"/pill/merging-arrays","title":"Merging arrays","description":"If you need to merge two arrays you can use the Array.concat()"},"id":"16ee301f-058a-5d90-a7f4-503f65540a96"}},{"node":{"frontmatter":{"slug":"/pill/map","title":"Map","description":"The `map()` method creates a new array with the results of applying a function on every element of an original array without mutating it."},"id":"91ea0df9-26a3-5482-bc41-9af7bacd803e"}},{"node":{"frontmatter":{"slug":"/pill/in-operator","title":"In operator","description":"The `in` operator returns true if the specified property is in the specified object or its prototype chain."},"id":"699068df-6bd7-5625-aae7-010f1bab0df2"}},{"node":{"frontmatter":{"slug":"/pill/remove-falsy-values-from-an-array","title":"Remove falsy values from an array","description":"Remove falsy values from an array"},"id":"7d6b9d84-a608-5e3d-bc20-e3bb1a71a0fb"}},{"node":{"frontmatter":{"slug":"/pill/dedupe-arrays","title":"Dedupe arrays","description":"Different ways to remove duplicates from an array"},"id":"e156dabf-5ef1-5afa-a140-ec9e8d510274"}},{"node":{"frontmatter":{"slug":"/pill/currying","title":"Currying","description":"This is a technique which involves converting a function which takes multiple arguments into a series of smaller cascaded functions which each take a single argument and return a function, except for the last cascaded function which returns the final result."},"id":"4e566587-fd85-5bf2-be01-ce1180726081"}},{"node":{"frontmatter":{"slug":"/pill/console-methods-explained","title":"Console methods explained","description":"Console methods explained"},"id":"41261edb-346a-51e7-90ad-c020d17bbbb8"}},{"node":{"frontmatter":{"slug":"/pill/compose","title":"compose","description":"Compose is a system design principle that allows us to dynamically comibine serveral funcions and returns the resut."},"id":"328b2f8c-7311-5ebf-9d54-114a8b66d0be"}},{"node":{"frontmatter":{"slug":"/pill/clone-javascript-objects","title":"Clone Javascript Objects","description":"Objects in Javascript are references values, so you can't just copy using assing operator `=`"},"id":"a0cad63b-a729-5d14-b828-bbf5ad86c769"}},{"node":{"frontmatter":{"slug":"/pill/check-conditions-concurrently","title":"Check conditions concurrently","description":"_A system is said to be **concurrent** if it can support two or more actions in progress at the same time. A system is said to be **parallel** if it can support two or more actions executing simultaneously._"},"id":"20fd6349-dd41-5804-be42-ed706402d935"}},{"node":{"frontmatter":{"slug":"/pill/async-await-iterations","title":"Async Await iterations","description":"Do you want to make asynchronous request sequentially? Using async await can be tricky. Let's see why."},"id":"f0d71f1d-1460-529d-8a47-1c2a2e1baf8c"}},{"node":{"frontmatter":{"slug":"/pill/creating-an-array-of-consecutive-numbers","title":"Creating an array of consecutive numbers","description":"This is a collection of examples on how we can create an <b>array of consecutive numbers from 1 to n</b> in JavaScript, from the classic for loop to the ES6 Array class methods."},"id":"5a1c4d1c-a9a9-50fb-8c91-22c3fdb4d4ae"}},{"node":{"frontmatter":{"slug":"/pill/set-default-values","title":"Set Default Values","description":"Here are four ways to set a default value for a variable in JavaScript, each one of them with its pros and cons."},"id":"c17d4934-1762-5900-b6a3-223d5d048865"}},{"node":{"frontmatter":{"slug":"/pill/array-prototype-every()","title":"Array.prototype.every()","description":"This method tests if all the elements in array meets the condition in the provided function."},"id":"5d0cd73b-c170-5e68-9392-5236b4e1adf3"}},{"node":{"frontmatter":{"slug":"/pill/reduce","title":"Reduce","description":"The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value."},"id":"fa62f60e-f0b1-5e80-9b2b-6db609a184ad"}}]}},"pageContext":{}},"staticQueryHashes":[]}