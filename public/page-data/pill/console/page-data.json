{"componentChunkName":"component---src-templates-pill-template-js","path":"/pill/console","result":{"data":{"markdownRemark":{"html":"<h1>Console methods explained</h1>\n<h2>🆒 Console outputs and levels</h2>\n<ul>\n<li><code>console.log</code> Normal output to stdout</li>\n<li><code>console.info</code> Normal output to stdout with log level <code>info</code></li>\n<li><code>console.error</code> Output is displayed at stderr</li>\n<li><code>console.warn</code> Warn output is displayed at stdout with log level <code>warn</code></li>\n<li><code>console.debug</code> Output to stdout with log level <code>debug</code></li>\n</ul>\n<p>Examples:</p>\n<pre><code class=\"language-js\">console.log('This is a normal log line');\nconsole.info('This is a infomation line');\nconsole.error('This is a error line');\nconsole.warn('This is a warning line');\nconsole.debug('This is a debug line');\n</code></pre>\n<h2>🆒 Console utilities</h2>\n<ul>\n<li><code>console.clear</code> Clear the console</li>\n<li><code>console.count(label)</code> Log the number of times this line has been called with same label</li>\n<li><code>console.countReset(label)</code> Reset the counter for given label</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-js\">console.count('test');\n// Output should show: test: 1\nconsole.count('test');\n// Output should show: test: 2\nconsole.count('test');\n// Output should show: test: 3\nconsole.countReset('test');\nconsole.count('test');\n// Output should show: test: 1\n</code></pre>\n<ul>\n<li><code>console.time(label)</code> Starts a timer to a given label</li>\n<li><code>console.timeLog(label)</code> Show the value of the specified timer label (in miliseconds)</li>\n<li><code>console.timeEnd(label)</code> Stops and show the timer of given label (in miliseconds)</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-js\">console.timer('testTimer');\n// wait 1 second\nconsole.timerLog('testTimer');\n// Output should show: testTimer: 1.000 ms\n// and wait 1.5 seconds :P\nconsole.timerEnd('testTimer');\n// Output should show: testTimer: 2.500 ms\n</code></pre>\n<h2>🆒 Using console to display data</h2>\n<ul>\n<li><code>console.dir(object)</code> Display the given object as JSON tree</li>\n<li><code>console.table(object, [columns])</code> Displays tabular data as a table (Array, Sets...) you can filter what <code>columns</code> you want to show</li>\n</ul>\n<p>Examples:</p>\n<pre><code class=\"language-js\">const arrayOfObjects = [\n  {\n    name: 'one',\n    odd: false,\n    count: 1,\n  },\n  {\n    name: 'two',\n    odd: true,\n    count: 2,\n  },\n  {\n    name: 'one',\n    odd: false,\n    count: 3,\n  },\n];\n\n// Display as JSON tree\nconsole.dir(arrayOfObjects);\n\n// Output:\n// [\n//   { name: 'one', odd: false, count: 1 },\n//   { name: 'two', odd: true, count: 2 },\n//   { name: 'one', odd: false, count: 3 }\n// ]\n\n// Render a table with all columns\nconsole.table(arrayOfObjects);\n\n// Output\n// ┌─────────┬───────┬───────┬───────┐\n// │ (index) │ name  │  odd  │ count │\n// ├─────────┼───────┼───────┼───────┤\n// │    0    │ 'one' │ false │   1   │\n// │    1    │ 'two' │ true  │   2   │\n// │    2    │ 'one' │ false │   3   │\n// └─────────┴───────┴───────┴───────┘\n\n// Render a table filtering columns\nconsole.table(arrayOfObjects, ['name', 'odd']);\n\n// Output\n// ┌─────────┬───────┬───────┐\n// │ (index) │ name  │  odd  │\n// ├─────────┼───────┼───────┤\n// │    0    │ 'one' │ false │\n// │    1    │ 'two' │ true  │\n// │    2    │ 'one' │ false │\n// └─────────┴───────┴───────┘\n</code></pre>\n<h2>🆒 Error handling and debug utilities</h2>\n<ul>\n<li><code>console.trace( message, object)</code></li>\n</ul>\n<pre><code class=\"language-js\">const testObject = { awesome: true, boring: false };\nconsole.trace('Trace dump text', testObject );\n\n// Output\nTrace: Trace dump text { awesome: true, boring: false }\n    at Object.&#x3C;anonymous> (/code/guidesmiths/js-pills/basic/console-explained/index.js:48:9)\n    at Module._compile (internal/modules/cjs/loader.js:1138:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)\n    at Module.load (internal/modules/cjs/loader.js:986:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:879:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:71:12)\n    at internal/main/run_main_module.js:17:47\n</code></pre>\n<ul>\n<li><code>console.assert(assertion, message)</code> writes an error message to the console if the assertion is false. If the assertion is true, nothing happens.</li>\n</ul>\n<pre><code class=\"language-js\">const x = 5;\nconst y = 3;\nconst reason = `${x} is expected to be less than ${y}`;\nconsole.assert(x &#x3C; y, reason);\n\n// Output\nAssertion failed: 5 is expected to be less than 3\n</code></pre>","frontmatter":{"date":"May 04, 2019","slug":"/pill/console","title":"Console"}}},"pageContext":{"slug":"/pill/console"}},"staticQueryHashes":[]}